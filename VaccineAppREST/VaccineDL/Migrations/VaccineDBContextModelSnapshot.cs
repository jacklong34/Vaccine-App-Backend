// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VaccineDL;

namespace VaccineDL.Migrations
{
    [DbContext(typeof(VaccineDBContext))]
    partial class VaccineDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VaccineModels.Appointment", b =>
                {
                    b.Property<int>("AppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PharmId")
                        .HasColumnType("int");

                    b.Property<int>("VacId")
                        .HasColumnType("int");

                    b.HasKey("AppId");

                    b.HasIndex("PatientId");

                    b.HasIndex("PharmId");

                    b.HasIndex("VacId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("VaccineModels.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("VaccineModels.Pharmacy", b =>
                {
                    b.Property<int>("PharmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("PharmId");

                    b.ToTable("Pharmacy");
                });

            modelBuilder.Entity("VaccineModels.PharmacyVaccine", b =>
                {
                    b.Property<int>("PharmId")
                        .HasColumnType("int");

                    b.Property<int>("VacId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PharmId", "VacId")
                        .HasName("PK_PharmacyVaccine");

                    b.HasIndex("VacId");

                    b.ToTable("PharmacyVaccine");
                });

            modelBuilder.Entity("VaccineModels.Vaccine", b =>
                {
                    b.Property<int>("VacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Doses")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VacId");

                    b.ToTable("Vaccine");
                });

            modelBuilder.Entity("VaccineModels.Appointment", b =>
                {
                    b.HasOne("VaccineModels.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaccineModels.Pharmacy", "Pharmacy")
                        .WithMany("Appointments")
                        .HasForeignKey("PharmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaccineModels.Vaccine", "Vaccine")
                        .WithMany("Appointments")
                        .HasForeignKey("VacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("Pharmacy");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VaccineModels.PharmacyVaccine", b =>
                {
                    b.HasOne("VaccineModels.Pharmacy", "Pharmacy")
                        .WithMany("PharmacyVaccines")
                        .HasForeignKey("PharmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaccineModels.Vaccine", "Vaccine")
                        .WithMany("PharmacyVaccines")
                        .HasForeignKey("VacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pharmacy");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VaccineModels.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("VaccineModels.Pharmacy", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("PharmacyVaccines");
                });

            modelBuilder.Entity("VaccineModels.Vaccine", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("PharmacyVaccines");
                });
#pragma warning restore 612, 618
        }
    }
}
